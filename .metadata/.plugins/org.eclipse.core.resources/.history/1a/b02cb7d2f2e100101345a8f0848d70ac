package com.ripplesystem.model;

import java.lang.annotation.Annotation;
import java.lang.reflect.Method;
import java.util.ArrayList;
import java.util.List;

import com.google.appengine.api.datastore.DatastoreService;
import com.google.inject.Inject;

public class GaeEntityConverter {
	
	@Inject
	public GaeEntityConverter(DatastoreService storeSvc)
	{
		_storeSvc = storeSvc;
	}
	
	/**
	 * Converts RSEntity object into Google App Engine's Entity
	 * @param source
	 * @return
	 */
	public Object convertTo(Object source) {
		if( source == null )
			throw new NullPointerException("source");
		
		RSEntity entityInfo = source.getClass().getAnnotation(RSEntity.class);
		if (entityInfo == null)
			throw new NullPointerException("source missing RSEntity information");
		
		// Find the key field and properties
		Method[] methods = source.getClass().getMethods();
		Method keyGetter;
		List<Method> fieldGetters = new ArrayList<Method>();
		
		for( Method method : methods )
		{
			RSKey keyInfo = method.getAnnotation(RSKey.class);
			if (keyInfo != null)
			{
				if (keyGetter != null)
					throw new RuntimeException("RSKey can only be set on one field.");
				keyGetter = method;
			}
			RSField fieldInfo = method.getAnnotation(RSField.class);
			if (fieldInfo != null)
			{
				fieldGetters.add(method);
			}
		}
		
		Entity entity = new Entity(entityInfo.value());
		return null;
	}
	
	/**
	 * Converts GoogleAppEngine's Entity into RSEntity
	 * @param source
	 * @return
	 */
	public Object convertFrom(Object source) {
		return null;
	}
}
