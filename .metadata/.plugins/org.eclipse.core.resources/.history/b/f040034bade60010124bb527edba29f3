package com.ripplesystem.foobar.test;

import static org.junit.Assert.*;

import java.util.Date;

import org.junit.After;
import org.junit.Before;
import org.junit.Test;

import com.google.appengine.tools.development.testing.LocalDatastoreServiceTestConfig;
import com.google.appengine.tools.development.testing.LocalServiceTestHelper;
import com.google.inject.Guice;
import com.google.inject.Injector;
import com.ripplesystem.foobar.command.FBAddPoints;
import com.ripplesystem.foobar.command.FBCreateStore;
import com.ripplesystem.foobar.command.FBGetRedeemToken;
import com.ripplesystem.foobar.command.FBGetRedeemToken.Response;
import com.ripplesystem.foobar.command.FBGetStoreInfo;
import com.ripplesystem.foobar.command.FBGetStoreListForDevice;
import com.ripplesystem.foobar.command.FBGetTokenForDevice;
import com.ripplesystem.foobar.command.FBRedeemPoints;
import com.ripplesystem.foobar.command.FBUpdateStore;
import com.ripplesystem.foobar.model.StoreInfo;
import com.ripplesystem.foobar.service.FoobarService;

public class FoobarServiceTest
{
	private final LocalServiceTestHelper helper =
	        new LocalServiceTestHelper(new LocalDatastoreServiceTestConfig());
	
	@Before
	public void setUp()
	{
		helper.setUp();
	}
	
	@After
	public void tearDown()
	{
		helper.tearDown();
	}
	
	@Test
	public void testFBServiceInSequence()
	{
		Injector injector = Guice.createInjector(new TestModule());
		FoobarService fbs = injector.getInstance(FoobarService.class);
		
		// This is the beginning of everything
		String deviceId = "7968d30409c82898a293e4da37d689d5df3de471f55678f558a226374a3dab93";
		// Let's register the device
		FBGetTokenForDevice.Response resToken1 = testGetTokenForDevice(fbs, deviceId);
		// Do it again, but check that it's getting the persisted object from the previous call
		FBGetTokenForDevice.Response resToken2 = testGetTokenForDevice(fbs, deviceId);
		assertEquals( resToken1.getToken(), resToken2.getToken());
		// Let's register the store
		FBCreateStore.Response resStore = testCreateStore(fbs);
		// Update the store
		FBUpdateStore.Response resUpdateStore = testUpdateStore(fbs, resStore.getStoreKey());
		// Get the store
		FBGetStoreInfo.Response getStoreInfoRes = testGetStoreInfo(fbs, resStore.getStoreKey());
		// Let's give points to this guy
		FBAddPoints.Response res2 = testAddPoints(fbs, resToken2.getToken(), resStore.getStoreKey());
		// Let's get list of stores
		FBGetStoreListForDevice.Response resStoreList = testGetStoreListForDevice(fbs, deviceId);
		// Let's get redeem token
		FBGetRedeemToken.Response resRedeemToken = testGetRedeemToken(fbs, deviceId, resUpdateStore.getStoreKey());
		// Let's subtract points from this dude.
		FBRedeemPoints.Response resRedeemPoints = testRedeemPoints(fbs, resUpdateStore.getStoreKey(), resRedeemToken.getRedeemToken());
	}
	
	/**
	 * Hello world
	 */
	public FBGetTokenForDevice.Response testGetTokenForDevice(FoobarService fbs, String deviceId)
	{
		FBGetTokenForDevice cmd = new FBGetTokenForDevice();
		cmd.setDeviceId(deviceId);
		
		FBGetTokenForDevice.Response res1 = (FBGetTokenForDevice.Response)fbs.exec(cmd);
		assertNotNull(res1.getToken());
		
		// Run this for the second time to see if the device and token can be brought from persistence.
		FBGetTokenForDevice.Response res2 = (FBGetTokenForDevice.Response)fbs.exec(cmd);
		assertEquals(res1.getToken(), res2.getToken());
		return res2;
	}
	
	public FBCreateStore.Response testCreateStore(FoobarService fbs)
	{
		FBCreateStore cmd = new FBCreateStore();
		cmd.setName("まんじまけろ〜に");
		cmd.setAddress("東京都八王子西八王子１−２−３");
		cmd.setTel("03-1234-1234");
		cmd.setUrl("http://www.manjimakeroni.com");
		cmd.setImageUrl("http://www.manjimakeroni.com/pic.png");
		cmd.setEmail("izumi@apcandsons.com");
		cmd.setPassword("12345678");
		
		FBCreateStore.Response res = (FBCreateStore.Response)fbs.exec(cmd);
		assertEquals(true, res.isSuccess());
		return res;
	}
	
	public FBUpdateStore.Response testUpdateStore(FoobarService fbs, long storeKey)
	{
		FBUpdateStore cmd = new FBUpdateStore();
		cmd.setStoreKey(storeKey);
		cmd.setName("まんじまけろーに");
		cmd.setAddress("東京都八王子西八王子２−３−４");
		cmd.setTel("080-1234-5678");
		cmd.setUrl("http://www.manjimakeroni.net");
		cmd.setImageUrl("http://www.manjimakeroni.net/pic.jpg");
		cmd.setEmail("izumi@apcandsons.net");
		cmd.setPassword("87654321");
		
		FBUpdateStore.Response res = (FBUpdateStore.Response)fbs.exec(cmd);
		return res;
	}
	
	public FBGetStoreInfo.Response testGetStoreInfo(FoobarService fbs, long storeKey)
	{
		FBGetStoreInfo cmd = new FBGetStoreInfo();
		cmd.setStoreKey(storeKey);
		FBGetStoreInfo.Response res = (FBGetStoreInfo.Response)fbs.exec(cmd);
		StoreInfo store = res.getStoreInfo();
		assertEquals("まんじまけろーに", store.getName());
		return res;
	}
	
	public FBAddPoints.Response testAddPoints(FoobarService fbs, String userToken, long storeKey)
	{
		FBAddPoints cmd = new FBAddPoints();
		cmd.setUserToken(userToken);
		cmd.setStoreKey(storeKey);
		cmd.setPoints(100);
		
		{
			FBAddPoints.Response res = (FBAddPoints.Response)fbs.exec(cmd);	
			assertEquals(true, res.isSuccess());
			assertEquals(100, res.getCurrentPoints());
		}

		// Add points one more time
		{
			cmd.setPoints(50);
			FBAddPoints.Response res = (FBAddPoints.Response)fbs.exec(cmd);
			assertEquals(true, res.isSuccess());
			assertEquals(150, res.getCurrentPoints());
			return res;
		}
	}
	
	private FBGetStoreListForDevice.Response testGetStoreListForDevice(FoobarService fbs, String deviceId)
	{
		FBGetStoreListForDevice cmd = new FBGetStoreListForDevice();
		cmd.setDeviceId(deviceId);
		
		FBGetStoreListForDevice.Response res = (FBGetStoreListForDevice.Response)fbs.exec(cmd);
		assertEquals(1, res.getStorePointsInfo().size());
		StoreInfo storeInfo = (StoreInfo)res.getStorePointsInfo().keySet().toArray()[0];
		assertEquals("まんじまけろーに", storeInfo.getName());
		assertEquals((long)150, (long)res.getStorePointsInfo().get(storeInfo));
		return res;
	}

	private Response testGetRedeemToken(FoobarService fbs, String deviceId, long storeKey)
	{
		FBGetRedeemToken cmd = new FBGetRedeemToken();
		cmd.setDeviceId(deviceId);
		cmd.setStoreKey(storeKey);
		
		FBGetRedeemToken.Response res = (FBGetRedeemToken.Response)fbs.exec(cmd);
		assertTrue(res.isSuccess());
		assertNotNull(res.getRedeemToken());
		assertNotNull(res.getExpiration());
		assertTrue(res.getExpiration().getTime() - new Date().getTime() >= 2.5 * 1000 * 60 * 60);
		assertTrue(res.getExpiration().getTime() - new Date().getTime() <= 3.5 * 1000 * 60 * 60);
		return null;
	}
	
	private FBRedeemPoints.Response testRedeemPoints(FoobarService fbs,	long storeKey, String redeemToken)
	{
		FBRedeemPoints cmd = new FBRedeemPoints();
		cmd.setRedeemToken(redeemToken);
		cmd.setStoreKey(storeKey);
		cmd.setPoints(200); // Make this fail!
		
		FBRedeemPoints.Response res = (FBRedeemPoints.Response)fbs.exec(cmd);
		return null;
	}


}